// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  trips         Trip[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Trip {
  id                String   @id @default(cuid())
  userId           String
  destination      String
  startDate        DateTime
  endDate          DateTime
  budget           Float
  accommodationId  String?
  flightId         String?
  status           String   @default("planned") // planned, booked, completed, cancelled
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accommodation    Accommodation? @relation(fields: [accommodationId], references: [id])
  flight           Flight? @relation(fields: [flightId], references: [id])
  addOns           AddOn[]
}

model Accommodation {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  location    String
  rating      Float
  image       String
  amenities   String
  trips       Trip[]
}

model Flight {
  id          String   @id @default(cuid())
  airline     String
  flightNumber String
  departure   String
  arrival     String
  price       Float
  duration    String
  stops       Int
  trips       Trip[]
}

model AddOn {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  type        String
  trips       Trip[]
} 